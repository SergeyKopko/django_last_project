import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telebot.types import InputMediaPhoto
import sqlite3
import os
import datetime as DT
import time
import json



token = '5937676517:AAEG8U11wayyFFQmbJKi3Y3BdINCzUTIDWs'
bot = telebot.TeleBot(token)
PHOTO_DIR = 'photo'
conn = sqlite3.connect('auctions.db', check_same_thread=False)



Trade_inline_keyb = InlineKeyboardMarkup(row_width=3)
Trade_inline_keyb.add(InlineKeyboardButton("+20p:", callback_data="qwerty:qwerty"),
                      InlineKeyboardButton("+30p:", callback_data="qwerty:qwerty"),
                      InlineKeyboardButton("+50p:", callback_data="qwerty:qwerty"),
                      InlineKeyboardButton("+100p:", callback_data="qwerty:qwerty"),
                      InlineKeyboardButton("+200p:", callback_data="qwerty:qwerty"),
                      InlineKeyboardButton("+500p:", callback_data="qwerty:qwerty")) # –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º –∫–æ–ª–±—ç–∫–æ–º

"""–ü—Ä–æ–ø–∏—Å–∞—Ç—å —É—Å–ª–æ–≤–∏–µ –¥–ª—è –∞–≤—Ç–æ—Å—Ç–∞–≤–∫–∏(–í –∫–æ—à–µ–ª—å–∫–µ 500—Ä)"""

Trade_inline_keyb.add(InlineKeyboardButton("–ê–≤—Ç–æ—Å-—Ç–∞–≤–∫–∞", callback_data="qwerty:qwerty"))
Trade_inline_keyb.add(InlineKeyboardButton("\U0001F552", callback_data="qwerty:qwerty"),
                      InlineKeyboardButton("–ò–Ω—Ñ–∞", callback_data="qwerty:qwerty"))

Main_inline_keyb = InlineKeyboardMarkup()
Main_inline_keyb.add(InlineKeyboardButton("–ú–æ–∏ –∞—É–∫—Ü–∏–æ–Ω—ã", callback_data="menu:txt1"))
Main_inline_keyb.add(InlineKeyboardButton("–†–æ–∑—ã–≥—Ä—ã—à", callback_data="menu:txt3"))
Main_inline_keyb.add(InlineKeyboardButton("–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="menu:txt4"))
Main_inline_keyb.add(InlineKeyboardButton("–ü—Ä–∞–≤–∏–ª–∞", callback_data="menu:txt2"))
Main_inline_keyb.add(InlineKeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="menu:profile"))
Main_inline_keyb.add(InlineKeyboardButton("–ü–æ–º–æ—â—å", callback_data="menu:profile"))
Main_inline_keyb.add(InlineKeyboardButton("–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å", callback_data="take:part"))



@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç ,—è –±–æ—Ç –∞—É–∫—Ü–∏–æ–Ω–æ–≤ @opt_monet_vtelege –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –ª–æ—Ç–∞–º–∏,"
                                      "–∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–¥ –∞—É–∫—Ü–∏–æ–Ω–∞.–ê —Ç–∞–∫ –∂–µ –±—É–¥—É —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤–∞—à–∏–º–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º–∏ –±–∞–ª–∞–º–∏. "
                                      "–£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤ ü§ù", reply_markup=Main_inline_keyb)
    user_telegram_id = message.from_user.id


@bot.callback_query_handler(func=lambda call: call.data.split(":"))
def query_handler(call):
    bot.answer_callback_query(callback_query_id=call.id,)
    if call.data.split(':')[1] == "part":
        with conn:
            name = [i[1] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            description = [i[2] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            start_price = [i[3] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            link_seller = [i[4] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            photo = [i[5] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            geolocations = [i[6] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            start_time = [i[7] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            end_time = [i[8] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]

        result = f"{name[0]}\n" \
                 f"{description[0]}\n" \
                 f"{start_price[0]}\n" \
                 f"{link_seller[0]}\n" \
                 f"{geolocations[0]}\n"
        with open("photo/" + photo[0], "rb") as img:
            bot.send_photo(call.message.chat.id, photo=img)
        bot.send_message(call.message.chat.id, f"{result}", reply_markup=Trade_inline_keyb)


print("Ready")
bot.infinity_polling(none_stop=True, interval=0)
