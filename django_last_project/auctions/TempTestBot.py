import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telebot.types import InputMediaPhoto
import sqlite3
import os
import datetime as DT
from datetime import datetime
import time
import json

token = '6112420224:AAF0gLi1ZFYabFDubwjawFyjDMjmtJ0_JZc'
bot = telebot.TeleBot(token)
PHOTO_DIR = 'photo'
conn = sqlite3.connect('auctions.db', check_same_thread=False)



Main_keyb_dct = {"–ú–æ–∏ –∞—É–∫—Ü–∏–æ–Ω—ã": "menu:my_auc",
                 "–†–æ–∑—ã–≥—Ä—ã—à": "menu:lottery",
                 "–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π": "menu:top",
                 "–ü—Ä–∞–≤–∏–ª–∞": "menu:rules",
                 "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞": "menu:stats",
                 "–ü–æ–º–æ—â—å": "menu:help",
                 "–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å": "menu:take_part"}
Return_to_menu_keyb_dct = {"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é": "menu:main-menu"}


def create_universal_inline_keyb(dct):  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ –≤ –ë–î, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å
    Main_inline_keyb = InlineKeyboardMarkup(row_width=1)
    for key, value in dct.items():
        Main_inline_keyb.add(InlineKeyboardButton(f"{key}", callback_data=f"{value}"))
    return Main_inline_keyb


Trade_inline_keyb = InlineKeyboardMarkup(row_width=3)
Trade_inline_keyb.add(InlineKeyboardButton("+20p:", callback_data="bid:+20"),
                      InlineKeyboardButton("+30p:", callback_data="bid:+30"),
                      InlineKeyboardButton("+50p:", callback_data="bid:+50"),
                      InlineKeyboardButton("+100p:", callback_data="bid:+100"),
                      InlineKeyboardButton("+200p:", callback_data="bid:+200"),
                      InlineKeyboardButton("+500p:", callback_data="bid:+500"))
"""–ü—Ä–æ–ø–∏—Å–∞—Ç—å —É—Å–ª–æ–≤–∏–µ –¥–ª—è –∞–≤—Ç–æ—Å—Ç–∞–≤–∫–∏ (–í –∫–æ—à–µ–ª—å–∫–µ 500—Ä)"""
Trade_inline_keyb.add(InlineKeyboardButton("–ê–≤—Ç–æ-—Å—Ç–∞–≤–∫–∞", callback_data="qwerty:qwerty"))
Trade_inline_keyb.add(InlineKeyboardButton("–°—Ç–∞—Ä—Ç", callback_data="qwerty:qwerty"))
Trade_inline_keyb.add(InlineKeyboardButton("\U0001F552", callback_data="qwerty:timeleft"),
                      InlineKeyboardButton("\U00002139", callback_data="qwerty:info"))


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∞—É–∫—Ü–∏–æ–Ω–æ–≤ @coin_minsk. –Ø –ø–æ–º–æ–≥—É –í–∞–º —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –ª–æ—Ç–∞–º–∏,"
                     "–∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–¥ –∞—É–∫—Ü–∏–æ–Ω–∞. –ê —Ç–∞–∫ –∂–µ –±—É–¥—É —Å–ª–µ–¥–∏—Ç—å –∑–∞ –í–∞—à–∏–º–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º–∏ –±–∞–ª–∞–º–∏. "
                     "–£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤ ü§ù", reply_markup=create_universal_inline_keyb(Main_keyb_dct))
    # user_telegram_id = message.from_user.id


@bot.callback_query_handler(func=lambda call: call.data.split(":"))
def query_handler(call):
    # bot.answer_callback_query(callback_query_id=call.id, )
    if call.data.split(':')[1] == "take_part":
        with conn:
            name = [i[1] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            description = [i[2] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            start_price = [i[3] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            link_seller = [i[4] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            photo_1 = [i[5] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            geolocations = [i[6] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            start_time = [i[7] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            end_time = [i[8] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]

        result = f"–ù–∞–∑–≤–∞–Ω–∏–µ –ª–æ—Ç–∞: {name[0]}\n" \
                 f"–û–ø–∏—Å–∞–Ω–∏–µ: {description[0]}\n" \
                 f"–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: {start_price[0]} —Ä—É–±.\n" \
                 f"–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–≤—Ü–∞: {geolocations[0]}\n" \
                 f"–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞: {link_seller[0]}\n"

        with open("photo/" + photo_1[0], "rb") as img:
            bot.send_photo(call.message.chat.id, photo=img)
        bot.send_message(call.message.chat.id, f"{result}", reply_markup=Trade_inline_keyb)
        bot.send_message(chat_id='@coin_minsk', text=f'{result}',
                         parse_mode="Markdown", reply_markup=Trade_inline_keyb)

    if call.data.split(':')[1] == "main-menu":
        bot.edit_message_text("–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –∞—É–∫—Ü–∏–æ–Ω–æ–≤ @coin_minsk. –Ø –ø–æ–º–æ–≥—É –í–∞–º —Å–ª–µ–¥–∏—Ç—å –∑–∞ "
                              "–≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –ª–æ—Ç–∞–º–∏, –∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–¥ –∞—É–∫—Ü–∏–æ–Ω–∞. –ê —Ç–∞–∫ –∂–µ –±—É–¥—É —Å–ª–µ–¥–∏—Ç—å "
                              "–∑–∞ –í–∞—à–∏–º–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º–∏ –±–∞–ª–∞–º–∏. –£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤ ü§ù",
                              call.message.chat.id, call.message.message_id,
                              reply_markup=create_universal_inline_keyb(Main_keyb_dct))

    if call.data.split(':')[1] == "info":
        print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å —Ç–µ–∫—Å—Ç–æ–º")
        bot.answer_callback_query(call.id, "–î–µ–ª–∞—è —Å—Ç–∞–≤–∫—É —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∂–µ–ª–∞–Ω–∏–µ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–∫—É–ø–∏—Ç—å –ª–æ—Ç. –í "
                                           "—Å–ª—É—á–∞–µ –Ω–µ–≤—ã–∫—É–ø–∞ –ª–æ—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 3-—Ö —Å—É—Ç–æ–∫, —É—á–∞—Å—Ç–Ω–∏–∫ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è.",
                                  show_alert=True)
    if call.data.split(':')[1] == "timeleft":
        print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–µ–∑–∂–∞—é—â–µ–µ –æ–∫–Ω–æ —Å —Ç–µ–∫—Å—Ç–æ–º - –≤—Ä–µ–º—è –∞—É–∫—Ü–∏–æ–Ω–∞")
        current_datetime = DT.datetime.now()
        with conn:
            start_time1 = [i[7] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
            end_time2 = [i[8] for i in conn.execute(f"SELECT * FROM Lots WHERE id = 1")]
        start_time = datetime.strptime(str(current_datetime)[:19], "%Y-%m-%d %H:%M:%S")  # 2021-10-01 12:00:00
        end_time = datetime.strptime(end_time2[0], "%Y-%m-%d %H:%M:%S")
        difference = end_time - start_time
        days = difference.days  # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∏–∑ –æ–±—ä–µ–∫—Ç–∞ timedelta
        total_seconds = difference.total_seconds()  # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ timedelta
        hours = int(total_seconds // 3600)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –≤ —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã
        minutes = int((total_seconds % 3600) // 60)
        seconds = int(total_seconds % 60)
        bot.answer_callback_query(call.id, f"–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: "
                                           f"{days} –¥–Ω–µ–π "
                                           f"{hours} —á–∞—Å–æ–≤ "
                                           f"{minutes} –º–∏–Ω—É—Ç "
                                           f"{seconds} —Å–µ–∫—É–Ω–¥", show_alert=False)

    if call.data.split(':')[1] == "rules":
        print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç c –ø—Ä–∞–≤–∏–ª–∞–º–∏")
        bot.edit_message_text("–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–æ—Ä–≥–æ–≤, –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –∏–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –¥–æ–ª–∂–Ω—ã –≤—ã–π—Ç–∏ –Ω–∞ —Å–≤—è–∑—å "
                              "–≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫‚ÄºÔ∏è–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–±—è–∑–∞–Ω –≤—ã–∫—É–ø–∏—Ç—å –ª–æ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ –¢–†–Å–• –¥–Ω–µ–π "
                              "–ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞üî•–ù–ï –í–´–ö–£–ü –õ–û–¢–ê - –ü–ï–†–ú–ê–ù–ï–ù–¢–ù–´–ô –ë–ê–ù –í–û –í–°–ï–• "
                              "–ù–£–ú–ò–ó–ú–ê–¢–ò–ß–ï–°–ö–ò–• –°–û–û–ë–©–ï–°–¢–í–ê–• –ò –ê–£–ö–¶–ò–û–ù–ê–•ü§¨ –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è "
                              "–æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ ‚è∞ –ê–Ω—Ç–∏ —Å–Ω–∞–π–ø–µ—Ä - –°—Ç–∞–≤–∫–∞ —Å–¥–µ–ª–∞–Ω–Ω–∞—è –∑–∞ 5 "
                              "–º–∏–Ω—É—Ç –¥–æ –∫–æ–Ω—Ü–∞, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç –ê—É–∫—Ü–∏–æ–Ω –Ω–∞ 5 –º–∏–Ω—É—Ç –≤–ø–µ—Ä—ë–¥ "
                              "‚ÄºÔ∏è–†–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–≤—Ü—ã. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –§–æ—Ç–æ –º–æ–∂–Ω–æ "
                              "–∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø—Ä–æ–¥–∞–≤—Ü–∞. –°–ª—É—á–∞–π–Ω–æ —Å–¥–µ–ª–∞–ª —Å—Ç–∞–≤–∫—É?ü§î –ù–∞–ø–∏—à–∏ –ø—Ä–æ–¥–∞–≤—Ü—É‚ÄºÔ∏è "
                              "–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—á—Ç–æ–π, —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ–±—â–µ–≥–æ –≤–µ—Å–∞ "
                              "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Å—Ç—Ä–∞–Ω—ã. –û–±—Å—É–∂–¥–∞–µ—Ç—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º. –õ–æ—Ç—ã –º–æ–∂–Ω–æ –∫–æ–ø–∏—Ç—å,"
                              "—ç–∫–æ–Ω–æ–º—è –ø—Ä–∏ —ç—Ç–æ–º –Ω–∞ –ø–æ—á—Ç–µ. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ —Ç—Ä—ë—Ö –¥–Ω–µ–π –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã‚ÄºÔ∏è",
                              call.message.chat.id, call.message.message_id,
                              reply_markup=create_universal_inline_keyb(Return_to_menu_keyb_dct))
    if call.data.split(':')[1] == "help":
        print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç c help")
        bot.edit_message_text("–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, –µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã '—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—É –∞–¥–º–∏–Ω–∞'"
                              "–£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤ –∏ –≤—ã–≥–æ–¥–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!",
                              call.message.chat.id, call.message.message_id,
                              reply_markup=create_universal_inline_keyb(Return_to_menu_keyb_dct))

# import requests
# channel = "@coin_minsk"  # –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
# photo = "photo/1.jpg"
# text = "This is a test message" # —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
# buttons = [[{"text": "Share", "url": "t.me/your_channel?start=your_post_id"}], # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏
#            [{"text": "Visit website", "url": "https://example.com"}]] # –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç
# data = {
#     "chat_id": channel,
#     "photo": photo,
#     "caption": text,
#     "reply_markup": {"inline_keyboard": buttons}
# }
# response = requests.post(f"https://api.telegram.org/bot{token}/sendPhoto", json=data)
# print(response.json())


print("Ready")
bot.infinity_polling(none_stop=True, interval=0)
